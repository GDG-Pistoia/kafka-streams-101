quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{2.}] %h %H ${quarkus.http.port} %i (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.color=true
quarkus.log.file.enable=false
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{2.}] %h %H ${quarkus.http.port} %i (%t) %s%e%n
quarkus.log.category."io.quarkus".level=INFO

quarkus.http.cors=true
quarkus.http.port=8080
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=quarkus_test
quarkus.datasource.password=quarkus_test
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus_test
quarkus.hibernate-orm.database.generation=drop-and-create

kafka.bootstrap.servers=localhost:9092

mp.messaging.outgoing.stocks-out.connector=smallrye-kafka
mp.messaging.outgoing.stocks-out.topic=stocks
mp.messaging.outgoing.stocks-out.partitioner.class=it.gdg.pt.kafka.TickerPartitioner
mp.messaging.outgoing.stocks-out.topic.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.outgoing.stocks-out.topic.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.logarithmic-return-exporter.connector=smallrye-kafka
mp.messaging.incoming.logarithmic-return-exporter.topic=logarithmic-returns
mp.messaging.incoming.logarithmic-return-exporter.partitioner.class=it.gdg.pt.kafka.TickerPartitioner
mp.messaging.incoming.logarithmic-return-exporter.topic.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.logarithmic-return-exporter.topic.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

quarkus.kafka-streams.topics=stocks, logarithmic-returns
quarkus.kafka-streams.bootstrap-servers=localhost:9092
quarkus.kafka-streams.application-id=return-analyzer-applier
kafka-streams.auto.offset.reset=latest
kafka-streams.processing.guarantee=exactly_once_v2
kafka-streams.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler